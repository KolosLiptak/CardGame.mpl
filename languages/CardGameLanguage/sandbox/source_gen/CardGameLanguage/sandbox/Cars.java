package CardGameLanguage.sandbox;

/*Generated by MPS */

import Runtime.JavaCode.DeckRuntime;
import Runtime.JavaCode.Card;
import Runtime.JavaCode.Property;

public class Cars {



  public static void main(String[] args) {
    DeckRuntime deckRuntime = new DeckRuntime();
    {
      Card Porsche911 = new Card("Porsche911");
      deckRuntime.addCard(Porsche911);
      Porsche911.addProperty(new Property());
      Porsche911.addProperty(new Property());
      Porsche911.addProperty(new Property());
      Porsche911.addProperty(new Property());

    }
    {
      Card LamborghiniHuracan = new Card("LamborghiniHuracan");
      deckRuntime.addCard(LamborghiniHuracan);
      LamborghiniHuracan.addProperty(new Property());
      LamborghiniHuracan.addProperty(new Property());
      LamborghiniHuracan.addProperty(new Property());
      LamborghiniHuracan.addProperty(new Property());

    }
    {
      Card FerrariF150 = new Card("FerrariF150");
      deckRuntime.addCard(FerrariF150);
      FerrariF150.addProperty(new Property());
      FerrariF150.addProperty(new Property());
      FerrariF150.addProperty(new Property());
      FerrariF150.addProperty(new Property());

    }
    {
      Card NissanSkyline = new Card("NissanSkyline");
      deckRuntime.addCard(NissanSkyline);
      NissanSkyline.addProperty(new Property());
      NissanSkyline.addProperty(new Property());
      NissanSkyline.addProperty(new Property());
      NissanSkyline.addProperty(new Property());

    }
    {
      Card MazdaRX7 = new Card("MazdaRX7");
      deckRuntime.addCard(MazdaRX7);
      MazdaRX7.addProperty(new Property());
      MazdaRX7.addProperty(new Property());
      MazdaRX7.addProperty(new Property());
      MazdaRX7.addProperty(new Property());

    }
    {
      Card ToyotaSupra = new Card("ToyotaSupra");
      deckRuntime.addCard(ToyotaSupra);
      ToyotaSupra.addProperty(new Property());
      ToyotaSupra.addProperty(new Property());
      ToyotaSupra.addProperty(new Property());
      ToyotaSupra.addProperty(new Property());

    }
    {
      Card DodgeViper = new Card("DodgeViper");
      deckRuntime.addCard(DodgeViper);
      DodgeViper.addProperty(new Property());
      DodgeViper.addProperty(new Property());
      DodgeViper.addProperty(new Property());
      DodgeViper.addProperty(new Property());

    }
    {
      Card FordGTR = new Card("FordGTR");
      deckRuntime.addCard(FordGTR);
      FordGTR.addProperty(new Property());
      FordGTR.addProperty(new Property());
      FordGTR.addProperty(new Property());
      FordGTR.addProperty(new Property());

    }
    {
      Card ChevroletCorvette = new Card("ChevroletCorvette");
      deckRuntime.addCard(ChevroletCorvette);
      ChevroletCorvette.addProperty(new Property());
      ChevroletCorvette.addProperty(new Property());
      ChevroletCorvette.addProperty(new Property());
      ChevroletCorvette.addProperty(new Property());

    }
    {
      Card AstonMartinDB9 = new Card("AstonMartinDB9");
      deckRuntime.addCard(AstonMartinDB9);
      AstonMartinDB9.addProperty(new Property());
      AstonMartinDB9.addProperty(new Property());
      AstonMartinDB9.addProperty(new Property());
      AstonMartinDB9.addProperty(new Property());

    }
    {
      Card LotusElise = new Card("LotusElise");
      deckRuntime.addCard(LotusElise);
      LotusElise.addProperty(new Property());
      LotusElise.addProperty(new Property());
      LotusElise.addProperty(new Property());
      LotusElise.addProperty(new Property());

    }
    {
      Card BugattiVeyron = new Card("BugattiVeyron");
      deckRuntime.addCard(BugattiVeyron);
      BugattiVeyron.addProperty(new Property());
      BugattiVeyron.addProperty(new Property());
      BugattiVeyron.addProperty(new Property());
      BugattiVeyron.addProperty(new Property());

    }
  }

}
