package CardGameLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCard = createDescriptorForCard();
  /*package*/ final ConceptDescriptor myConceptDeck = createDescriptorForDeck();
  /*package*/ final ConceptDescriptor myConceptIntValue = createDescriptorForIntValue();
  /*package*/ final ConceptDescriptor myConceptProperty = createDescriptorForProperty();
  /*package*/ final ConceptDescriptor myConceptStringValue = createDescriptorForStringValue();
  /*package*/ final ConceptDescriptor myConceptToken = createDescriptorForToken();
  /*package*/ final ConceptDescriptor myConceptValue = createDescriptorForValue();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCard, myConceptDeck, myConceptIntValue, myConceptProperty, myConceptStringValue, myConceptToken, myConceptValue);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Card:
        return myConceptCard;
      case LanguageConceptSwitch.Deck:
        return myConceptDeck;
      case LanguageConceptSwitch.IntValue:
        return myConceptIntValue;
      case LanguageConceptSwitch.Property:
        return myConceptProperty;
      case LanguageConceptSwitch.StringValue:
        return myConceptStringValue;
      case LanguageConceptSwitch.Token:
        return myConceptToken;
      case LanguageConceptSwitch.Value:
        return myConceptValue;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCard() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CardGameLanguage", "Card", 0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b824594L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:afcff3ea-f21b-45f4-91f1-e25c88e4b8f5(CardGameLanguage.structure)/6233642008867653012");
    b.version(3);
    b.aggregate("values", 0x568258613b82e587L).target(0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b82e0a7L).optional(true).ordered(true).multiple(true).origin("6233642008867693959").done();
    b.alias("card");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDeck() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CardGameLanguage", "Deck", 0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b8467c7L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:afcff3ea-f21b-45f4-91f1-e25c88e4b8f5(CardGameLanguage.structure)/6233642008867792839");
    b.version(3);
    b.aggregate("cards", 0x568258613b8467caL).target(0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b824594L).optional(true).ordered(true).multiple(true).origin("6233642008867792842").done();
    b.alias("deck");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIntValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CardGameLanguage", "IntValue", 0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b82ce75L);
    b.class_(false, false, false);
    // extends: CardGameLanguage.structure.Value
    b.super_(0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b82ce7bL);
    b.origin("r:afcff3ea-f21b-45f4-91f1-e25c88e4b8f5(CardGameLanguage.structure)/6233642008867688053");
    b.version(3);
    b.property("value", 0x568258613b82ce77L).type(PrimitiveTypeId.INTEGER).origin("6233642008867688055").done();
    b.alias("Number");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CardGameLanguage", "Property", 0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b82e0a7L);
    b.class_(false, false, false);
    b.origin("r:afcff3ea-f21b-45f4-91f1-e25c88e4b8f5(CardGameLanguage.structure)/6233642008867692711");
    b.version(3);
    b.aggregate("propertyName", 0x568258613b82e0a8L).target(0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b82ce76L).optional(false).ordered(true).multiple(false).origin("6233642008867692712").done();
    b.aggregate("propertyValue", 0x568258613b82e0aaL).target(0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b82ce7bL).optional(false).ordered(true).multiple(false).origin("6233642008867692714").done();
    b.alias("property");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStringValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CardGameLanguage", "StringValue", 0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b82ce76L);
    b.class_(false, false, false);
    // extends: CardGameLanguage.structure.Value
    b.super_(0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b82ce7bL);
    b.origin("r:afcff3ea-f21b-45f4-91f1-e25c88e4b8f5(CardGameLanguage.structure)/6233642008867688054");
    b.version(3);
    b.property("value", 0x568258613b82ce79L).type(PrimitiveTypeId.STRING).origin("6233642008867688057").done();
    b.alias("Text");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForToken() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CardGameLanguage", "Token", 0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b824595L);
    b.class_(false, false, false);
    b.origin("r:afcff3ea-f21b-45f4-91f1-e25c88e4b8f5(CardGameLanguage.structure)/6233642008867653013");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CardGameLanguage", "Value", 0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b82ce7bL);
    b.class_(false, true, false);
    b.origin("r:afcff3ea-f21b-45f4-91f1-e25c88e4b8f5(CardGameLanguage.structure)/6233642008867688059");
    b.version(3);
    return b.create();
  }
}
