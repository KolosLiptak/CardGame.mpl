package CardGameLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new Card_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new Deck_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new IntValue_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Pile_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new Property_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new StringValue_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new Token_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }



  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b824594L), MetaIdFactory.conceptId(0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b8467c7L), MetaIdFactory.conceptId(0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b82ce75L), MetaIdFactory.conceptId(0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x39b65bcfb2f83152L), MetaIdFactory.conceptId(0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b82e0a7L), MetaIdFactory.conceptId(0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b82ce76L), MetaIdFactory.conceptId(0xe94dfae4e9d04770L, 0x965c58db5e543504L, 0x568258613b824595L)).seal();
}
